{"ast":null,"code":"import { firestore, storage } from './config';\nexport const createUserDocument = async user => {\n  // get a reference to the Firestore document\n  const docRef = firestore.doc(`/users/${user.uid}`); // create user object\n\n  const userProfile = {\n    uid: user.uid,\n    email: user.email,\n    name: user.displayName,\n    address: '',\n    city: '',\n    state: '',\n    zip: '',\n    phone: '',\n    specialty: '',\n    ip: ''\n  }; // write to Cloud Firestore\n\n  return docRef.set(userProfile);\n};\nexport const updateUserDocument = async user => {\n  const docRef = firestore.doc(`/users/${user.uid}`);\n  return docRef.update(user);\n};\nexport const uploadImage = (userId, file, progress) => {\n  return new Promise((resolve, reject) => {\n    // create file reference\n    const filePath = `users/${userId}/profile-image`;\n    const fileRef = storage.ref().child(filePath); // upload task\n\n    const uploadTask = fileRef.put(file);\n    uploadTask.on('state_changed', snapshot => progress(snapshot), error => reject(error), () => {\n      resolve(uploadTask.snapshot.ref);\n    });\n  });\n};\nexport const getDownloadUrl = userId => {\n  const filePath = `users/${userId}/profile-image`;\n  return storage.ref().child(filePath).getDownloadURL();\n};","map":{"version":3,"sources":["C:/Users/patri/ReactProjects/react-firebase-grid-dashboard/src/firebase/user.js"],"names":["firestore","storage","createUserDocument","user","docRef","doc","uid","userProfile","email","name","displayName","address","city","state","zip","phone","specialty","ip","set","updateUserDocument","update","uploadImage","userId","file","progress","Promise","resolve","reject","filePath","fileRef","ref","child","uploadTask","put","on","snapshot","error","getDownloadUrl","getDownloadURL"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,UAAnC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,IAAP,IAAgB;AAChD;AACA,QAAMC,MAAM,GAAGJ,SAAS,CAACK,GAAV,CAAe,UAASF,IAAI,CAACG,GAAI,EAAjC,CAAf,CAFgD,CAIhD;;AACA,QAAMC,WAAW,GAAG;AAClBD,IAAAA,GAAG,EAAEH,IAAI,CAACG,GADQ;AAElBE,IAAAA,KAAK,EAAEL,IAAI,CAACK,KAFM;AAGlBC,IAAAA,IAAI,EAAEN,IAAI,CAACO,WAHO;AAIlBC,IAAAA,OAAO,EAAE,EAJS;AAKlBC,IAAAA,IAAI,EAAE,EALY;AAMlBC,IAAAA,KAAK,EAAE,EANW;AAOlBC,IAAAA,GAAG,EAAE,EAPa;AAQlBC,IAAAA,KAAK,EAAE,EARW;AASlBC,IAAAA,SAAS,EAAE,EATO;AAUlBC,IAAAA,EAAE,EAAE;AAVc,GAApB,CALgD,CAkBhD;;AACA,SAAOb,MAAM,CAACc,GAAP,CAAWX,WAAX,CAAP;AACD,CApBM;AAsBP,OAAO,MAAMY,kBAAkB,GAAG,MAAOhB,IAAP,IAAgB;AAChD,QAAMC,MAAM,GAAGJ,SAAS,CAACK,GAAV,CAAe,UAASF,IAAI,CAACG,GAAI,EAAjC,CAAf;AACA,SAAOF,MAAM,CAACgB,MAAP,CAAcjB,IAAd,CAAP;AACD,CAHM;AAKP,OAAO,MAAMkB,WAAW,GAAG,CAACC,MAAD,EAASC,IAAT,EAAeC,QAAf,KAA4B;AACrD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC;AACA,UAAMC,QAAQ,GAAI,SAAQN,MAAO,gBAAjC;AACA,UAAMO,OAAO,GAAG5B,OAAO,CAAC6B,GAAR,GAAcC,KAAd,CAAoBH,QAApB,CAAhB,CAHsC,CAKtC;;AACA,UAAMI,UAAU,GAAGH,OAAO,CAACI,GAAR,CAAYV,IAAZ,CAAnB;AAEAS,IAAAA,UAAU,CAACE,EAAX,CACE,eADF,EAEGC,QAAD,IAAcX,QAAQ,CAACW,QAAD,CAFxB,EAGGC,KAAD,IAAWT,MAAM,CAACS,KAAD,CAHnB,EAIE,MAAM;AACJV,MAAAA,OAAO,CAACM,UAAU,CAACG,QAAX,CAAoBL,GAArB,CAAP;AACD,KANH;AAQD,GAhBM,CAAP;AAiBD,CAlBM;AAoBP,OAAO,MAAMO,cAAc,GAAIf,MAAD,IAAY;AACxC,QAAMM,QAAQ,GAAI,SAAQN,MAAO,gBAAjC;AACA,SAAOrB,OAAO,CAAC6B,GAAR,GAAcC,KAAd,CAAoBH,QAApB,EAA8BU,cAA9B,EAAP;AACD,CAHM","sourcesContent":["import { firestore, storage } from './config';\n\nexport const createUserDocument = async (user) => {\n  // get a reference to the Firestore document\n  const docRef = firestore.doc(`/users/${user.uid}`);\n\n  // create user object\n  const userProfile = {\n    uid: user.uid,\n    email: user.email,\n    name: user.displayName,\n    address: '',\n    city: '',\n    state: '',\n    zip: '',\n    phone: '',\n    specialty: '',\n    ip: '',\n  };\n\n  // write to Cloud Firestore\n  return docRef.set(userProfile);\n};\n\nexport const updateUserDocument = async (user) => {\n  const docRef = firestore.doc(`/users/${user.uid}`);\n  return docRef.update(user);\n};\n\nexport const uploadImage = (userId, file, progress) => {\n  return new Promise((resolve, reject) => {\n    // create file reference\n    const filePath = `users/${userId}/profile-image`;\n    const fileRef = storage.ref().child(filePath);\n\n    // upload task\n    const uploadTask = fileRef.put(file);\n\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => progress(snapshot),\n      (error) => reject(error),\n      () => {\n        resolve(uploadTask.snapshot.ref);\n      }\n    );\n  });\n};\n\nexport const getDownloadUrl = (userId) => {\n  const filePath = `users/${userId}/profile-image`;\n  return storage.ref().child(filePath).getDownloadURL();\n};\n"]},"metadata":{},"sourceType":"module"}